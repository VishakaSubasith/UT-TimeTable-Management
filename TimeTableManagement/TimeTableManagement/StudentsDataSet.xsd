<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StudentsDataSet" targetNamespace="http://tempuri.org/StudentsDataSet.xsd" xmlns:mstns="http://tempuri.org/StudentsDataSet.xsd" xmlns="http://tempuri.org/StudentsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StudentsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StudentsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TimeTableManagement.Properties.Settings.GlobalReference.Default.StudentsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AcademicyrsemtableTableAdapter" GeneratorDataComponentClassName="AcademicyrsemtableTableAdapter" Name="Academicyrsemtable" UserDataComponentName="AcademicyrsemtableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Academicyrsemtable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Academicyrsemtable] WHERE (([AcademicYrsemId] = @Original_AcademicYrsemId) AND ([AcademicYrsem] = @Original_AcademicYrsem))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcademicYrsemId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcademicYrsemId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AcademicYrsem" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AcademicYrsem" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Academicyrsemtable] ([AcademicYrsem]) VALUES (@AcademicYrsem);
SELECT AcademicYrsemId, AcademicYrsem FROM Academicyrsemtable WHERE (AcademicYrsemId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AcademicYrsem" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AcademicYrsem" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AcademicYrsemId, AcademicYrsem FROM dbo.Academicyrsemtable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Academicyrsemtable] SET [AcademicYrsem] = @AcademicYrsem WHERE (([AcademicYrsemId] = @Original_AcademicYrsemId) AND ([AcademicYrsem] = @Original_AcademicYrsem));
SELECT AcademicYrsemId, AcademicYrsem FROM Academicyrsemtable WHERE (AcademicYrsemId = @AcademicYrsemId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AcademicYrsem" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AcademicYrsem" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcademicYrsemId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcademicYrsemId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AcademicYrsem" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AcademicYrsem" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AcademicYrsemId" ColumnName="AcademicYrsemId" DataSourceName="Students.dbo.Academicyrsemtable" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AcademicYrsemId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AcademicYrsemId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AcademicYrsemId" DataSetColumn="AcademicYrsemId" />
              <Mapping SourceColumn="AcademicYrsem" DataSetColumn="AcademicYrsem" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Group_idTableAdapter" GeneratorDataComponentClassName="Group_idTableAdapter" Name="Group_id" UserDataComponentName="Group_idTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Group_id" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group_id] WHERE (([Group_key] = @Original_Group_key) AND ([Group_number] = @Original_Group_number))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_key" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_key" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Group_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group_id] ([Group_number]) VALUES (@Group_number);
SELECT Group_key, Group_number FROM Group_id WHERE (Group_key = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Group_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Group_key, Group_number FROM dbo.Group_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group_id] SET [Group_number] = @Group_number WHERE (([Group_key] = @Original_Group_key) AND ([Group_number] = @Original_Group_number));
SELECT Group_key, Group_number FROM Group_id WHERE (Group_key = @Group_key)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Group_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_key" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_key" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Group_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Group_key" ColumnName="Group_key" DataSourceName="Students.dbo.Group_id" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Group_key" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Group_key" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Group_key" DataSetColumn="Group_key" />
              <Mapping SourceColumn="Group_number" DataSetColumn="Group_number" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Group_number_tableTableAdapter" GeneratorDataComponentClassName="Group_number_tableTableAdapter" Name="Group_number_table" UserDataComponentName="Group_number_tableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Group_number_table" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group_number_table] WHERE (([Group_number_id] = @Original_Group_number_id) AND ([Group_number] = @Original_Group_number))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_number_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group_number_table] ([Group_number]) VALUES (@Group_number);
SELECT Group_number_id, Group_number FROM Group_number_table WHERE (Group_number_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Group_number_id, Group_number FROM dbo.Group_number_table</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group_number_table] SET [Group_number] = @Group_number WHERE (([Group_number_id] = @Original_Group_number_id) AND ([Group_number] = @Original_Group_number));
SELECT Group_number_id, Group_number FROM Group_number_table WHERE (Group_number_id = @Group_number_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_number_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Group_number_id" ColumnName="Group_number_id" DataSourceName="Students.dbo.Group_number_table" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Group_number_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Group_number_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Group_number_id" DataSetColumn="Group_number_id" />
              <Mapping SourceColumn="Group_number" DataSetColumn="Group_number" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Programme_tableTableAdapter" GeneratorDataComponentClassName="Programme_tableTableAdapter" Name="Programme_table" UserDataComponentName="Programme_tableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Programme_table" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Programme_table] WHERE (([Programme_Id] = @Original_Programme_Id) AND ([Programme_name] = @Original_Programme_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Programme_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Programme_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Programme_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Programme_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Programme_table] ([Programme_name]) VALUES (@Programme_name);
SELECT Programme_Id, Programme_name FROM Programme_table WHERE (Programme_Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Programme_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Programme_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Programme_Id, Programme_name FROM dbo.Programme_table</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Programme_table] SET [Programme_name] = @Programme_name WHERE (([Programme_Id] = @Original_Programme_Id) AND ([Programme_name] = @Original_Programme_name));
SELECT Programme_Id, Programme_name FROM Programme_table WHERE (Programme_Id = @Programme_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Programme_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Programme_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Programme_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Programme_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Programme_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Programme_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Programme_Id" ColumnName="Programme_Id" DataSourceName="Students.dbo.Programme_table" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Programme_Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Programme_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Programme_Id" DataSetColumn="Programme_Id" />
              <Mapping SourceColumn="Programme_name" DataSetColumn="Programme_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Student_DetailsTableAdapter" GeneratorDataComponentClassName="Student_DetailsTableAdapter" Name="Student_Details" UserDataComponentName="Student_DetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Student_Details" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student_Details] WHERE (([Id] = @Original_Id) AND ([Group_Id] = @Original_Group_Id) AND ([Sub_Group_Id] = @Original_Sub_Group_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sub_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sub_Group_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student_Details] ([Group_Id], [Sub_Group_Id]) VALUES (@Group_Id, @Sub_Group_Id);
SELECT Id, Group_Id, Sub_Group_Id FROM Student_Details WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sub_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sub_Group_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Group_Id, Sub_Group_Id FROM dbo.Student_Details</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student_Details] SET [Group_Id] = @Group_Id, [Sub_Group_Id] = @Sub_Group_Id WHERE (([Id] = @Original_Id) AND ([Group_Id] = @Original_Group_Id) AND ([Sub_Group_Id] = @Original_Sub_Group_Id));
SELECT Id, Group_Id, Sub_Group_Id FROM Student_Details WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sub_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sub_Group_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Group_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sub_Group_Id" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sub_Group_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Students.dbo.Student_Details" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Group_Id" DataSetColumn="Group_Id" />
              <Mapping SourceColumn="Sub_Group_Id" DataSetColumn="Sub_Group_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Sub_group_id_tableTableAdapter" GeneratorDataComponentClassName="Sub_group_id_tableTableAdapter" Name="Sub_group_id_table" UserDataComponentName="Sub_group_id_tableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Sub_group_id_table" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sub_group_id_table] WHERE (([Subgroup_id_key] = @Original_Subgroup_id_key) AND ([Subgroup_id_value] = @Original_Subgroup_id_value))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Subgroup_id_key" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Subgroup_id_key" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Subgroup_id_value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Subgroup_id_value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sub_group_id_table] ([Subgroup_id_value]) VALUES (@Subgroup_id_value);
SELECT Subgroup_id_key, Subgroup_id_value FROM Sub_group_id_table WHERE (Subgroup_id_key = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Subgroup_id_value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Subgroup_id_value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Subgroup_id_key, Subgroup_id_value FROM dbo.Sub_group_id_table</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sub_group_id_table] SET [Subgroup_id_value] = @Subgroup_id_value WHERE (([Subgroup_id_key] = @Original_Subgroup_id_key) AND ([Subgroup_id_value] = @Original_Subgroup_id_value));
SELECT Subgroup_id_key, Subgroup_id_value FROM Sub_group_id_table WHERE (Subgroup_id_key = @Subgroup_id_key)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Subgroup_id_value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Subgroup_id_value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Subgroup_id_key" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Subgroup_id_key" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Subgroup_id_value" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Subgroup_id_value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Subgroup_id_key" ColumnName="Subgroup_id_key" DataSourceName="Students.dbo.Sub_group_id_table" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Subgroup_id_key" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Subgroup_id_key" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Subgroup_id_key" DataSetColumn="Subgroup_id_key" />
              <Mapping SourceColumn="Subgroup_id_value" DataSetColumn="Subgroup_id_value" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Sub_group_numbersTableAdapter" GeneratorDataComponentClassName="Sub_group_numbersTableAdapter" Name="Sub_group_numbers" UserDataComponentName="Sub_group_numbersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentsConnectionString (Settings)" DbObjectName="Students.dbo.Sub_group_numbers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sub_group_numbers] WHERE (([Sub_group_id] = @Original_Sub_group_id) AND ([Sub_group_number] = @Original_Sub_group_number))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sub_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sub_group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sub_group_numbers] ([Sub_group_number]) VALUES (@Sub_group_number);
SELECT Sub_group_id, Sub_group_number FROM Sub_group_numbers WHERE (Sub_group_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sub_group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sub_group_id, Sub_group_number FROM dbo.Sub_group_numbers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sub_group_numbers] SET [Sub_group_number] = @Sub_group_number WHERE (([Sub_group_id] = @Original_Sub_group_id) AND ([Sub_group_number] = @Original_Sub_group_number));
SELECT Sub_group_id, Sub_group_number FROM Sub_group_numbers WHERE (Sub_group_id = @Sub_group_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sub_group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sub_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sub_group_number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sub_group_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Sub_group_id" ColumnName="Sub_group_id" DataSourceName="Students.dbo.Sub_group_numbers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Sub_group_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Sub_group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sub_group_id" DataSetColumn="Sub_group_id" />
              <Mapping SourceColumn="Sub_group_number" DataSetColumn="Sub_group_number" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StudentsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="StudentsDataSet" msprop:Generator_UserDSName="StudentsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Academicyrsemtable" msprop:Generator_TableClassName="AcademicyrsemtableDataTable" msprop:Generator_TableVarName="tableAcademicyrsemtable" msprop:Generator_TablePropName="Academicyrsemtable" msprop:Generator_RowDeletingName="AcademicyrsemtableRowDeleting" msprop:Generator_RowChangingName="AcademicyrsemtableRowChanging" msprop:Generator_RowEvHandlerName="AcademicyrsemtableRowChangeEventHandler" msprop:Generator_RowDeletedName="AcademicyrsemtableRowDeleted" msprop:Generator_UserTableName="Academicyrsemtable" msprop:Generator_RowChangedName="AcademicyrsemtableRowChanged" msprop:Generator_RowEvArgName="AcademicyrsemtableRowChangeEvent" msprop:Generator_RowClassName="AcademicyrsemtableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AcademicYrsemId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAcademicYrsemId" msprop:Generator_ColumnPropNameInRow="AcademicYrsemId" msprop:Generator_ColumnPropNameInTable="AcademicYrsemIdColumn" msprop:Generator_UserColumnName="AcademicYrsemId" type="xs:int" />
              <xs:element name="AcademicYrsem" msprop:Generator_ColumnVarNameInTable="columnAcademicYrsem" msprop:Generator_ColumnPropNameInRow="AcademicYrsem" msprop:Generator_ColumnPropNameInTable="AcademicYrsemColumn" msprop:Generator_UserColumnName="AcademicYrsem">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Group_id" msprop:Generator_TableClassName="Group_idDataTable" msprop:Generator_TableVarName="tableGroup_id" msprop:Generator_TablePropName="Group_id" msprop:Generator_RowDeletingName="Group_idRowDeleting" msprop:Generator_RowChangingName="Group_idRowChanging" msprop:Generator_RowEvHandlerName="Group_idRowChangeEventHandler" msprop:Generator_RowDeletedName="Group_idRowDeleted" msprop:Generator_UserTableName="Group_id" msprop:Generator_RowChangedName="Group_idRowChanged" msprop:Generator_RowEvArgName="Group_idRowChangeEvent" msprop:Generator_RowClassName="Group_idRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Group_key" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnGroup_key" msprop:Generator_ColumnPropNameInRow="Group_key" msprop:Generator_ColumnPropNameInTable="Group_keyColumn" msprop:Generator_UserColumnName="Group_key" type="xs:int" />
              <xs:element name="Group_number" msprop:Generator_ColumnVarNameInTable="columnGroup_number" msprop:Generator_ColumnPropNameInRow="Group_number" msprop:Generator_ColumnPropNameInTable="Group_numberColumn" msprop:Generator_UserColumnName="Group_number">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Group_number_table" msprop:Generator_TableClassName="Group_number_tableDataTable" msprop:Generator_TableVarName="tableGroup_number_table" msprop:Generator_TablePropName="Group_number_table" msprop:Generator_RowDeletingName="Group_number_tableRowDeleting" msprop:Generator_RowChangingName="Group_number_tableRowChanging" msprop:Generator_RowEvHandlerName="Group_number_tableRowChangeEventHandler" msprop:Generator_RowDeletedName="Group_number_tableRowDeleted" msprop:Generator_UserTableName="Group_number_table" msprop:Generator_RowChangedName="Group_number_tableRowChanged" msprop:Generator_RowEvArgName="Group_number_tableRowChangeEvent" msprop:Generator_RowClassName="Group_number_tableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Group_number_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnGroup_number_id" msprop:Generator_ColumnPropNameInRow="Group_number_id" msprop:Generator_ColumnPropNameInTable="Group_number_idColumn" msprop:Generator_UserColumnName="Group_number_id" type="xs:int" />
              <xs:element name="Group_number" msprop:Generator_ColumnVarNameInTable="columnGroup_number" msprop:Generator_ColumnPropNameInRow="Group_number" msprop:Generator_ColumnPropNameInTable="Group_numberColumn" msprop:Generator_UserColumnName="Group_number" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Programme_table" msprop:Generator_TableClassName="Programme_tableDataTable" msprop:Generator_TableVarName="tableProgramme_table" msprop:Generator_TablePropName="Programme_table" msprop:Generator_RowDeletingName="Programme_tableRowDeleting" msprop:Generator_RowChangingName="Programme_tableRowChanging" msprop:Generator_RowEvHandlerName="Programme_tableRowChangeEventHandler" msprop:Generator_RowDeletedName="Programme_tableRowDeleted" msprop:Generator_UserTableName="Programme_table" msprop:Generator_RowChangedName="Programme_tableRowChanged" msprop:Generator_RowEvArgName="Programme_tableRowChangeEvent" msprop:Generator_RowClassName="Programme_tableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Programme_Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnProgramme_Id" msprop:Generator_ColumnPropNameInRow="Programme_Id" msprop:Generator_ColumnPropNameInTable="Programme_IdColumn" msprop:Generator_UserColumnName="Programme_Id" type="xs:int" />
              <xs:element name="Programme_name" msprop:Generator_ColumnVarNameInTable="columnProgramme_name" msprop:Generator_ColumnPropNameInRow="Programme_name" msprop:Generator_ColumnPropNameInTable="Programme_nameColumn" msprop:Generator_UserColumnName="Programme_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student_Details" msprop:Generator_TableClassName="Student_DetailsDataTable" msprop:Generator_TableVarName="tableStudent_Details" msprop:Generator_TablePropName="Student_Details" msprop:Generator_RowDeletingName="Student_DetailsRowDeleting" msprop:Generator_RowChangingName="Student_DetailsRowChanging" msprop:Generator_RowEvHandlerName="Student_DetailsRowChangeEventHandler" msprop:Generator_RowDeletedName="Student_DetailsRowDeleted" msprop:Generator_UserTableName="Student_Details" msprop:Generator_RowChangedName="Student_DetailsRowChanged" msprop:Generator_RowEvArgName="Student_DetailsRowChangeEvent" msprop:Generator_RowClassName="Student_DetailsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Group_Id" msprop:Generator_ColumnVarNameInTable="columnGroup_Id" msprop:Generator_ColumnPropNameInRow="Group_Id" msprop:Generator_ColumnPropNameInTable="Group_IdColumn" msprop:Generator_UserColumnName="Group_Id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sub_Group_Id" msprop:Generator_ColumnVarNameInTable="columnSub_Group_Id" msprop:Generator_ColumnPropNameInRow="Sub_Group_Id" msprop:Generator_ColumnPropNameInTable="Sub_Group_IdColumn" msprop:Generator_UserColumnName="Sub_Group_Id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sub_group_id_table" msprop:Generator_TableClassName="Sub_group_id_tableDataTable" msprop:Generator_TableVarName="tableSub_group_id_table" msprop:Generator_TablePropName="Sub_group_id_table" msprop:Generator_RowDeletingName="Sub_group_id_tableRowDeleting" msprop:Generator_RowChangingName="Sub_group_id_tableRowChanging" msprop:Generator_RowEvHandlerName="Sub_group_id_tableRowChangeEventHandler" msprop:Generator_RowDeletedName="Sub_group_id_tableRowDeleted" msprop:Generator_UserTableName="Sub_group_id_table" msprop:Generator_RowChangedName="Sub_group_id_tableRowChanged" msprop:Generator_RowEvArgName="Sub_group_id_tableRowChangeEvent" msprop:Generator_RowClassName="Sub_group_id_tableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Subgroup_id_key" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSubgroup_id_key" msprop:Generator_ColumnPropNameInRow="Subgroup_id_key" msprop:Generator_ColumnPropNameInTable="Subgroup_id_keyColumn" msprop:Generator_UserColumnName="Subgroup_id_key" type="xs:int" />
              <xs:element name="Subgroup_id_value" msprop:Generator_ColumnVarNameInTable="columnSubgroup_id_value" msprop:Generator_ColumnPropNameInRow="Subgroup_id_value" msprop:Generator_ColumnPropNameInTable="Subgroup_id_valueColumn" msprop:Generator_UserColumnName="Subgroup_id_value">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sub_group_numbers" msprop:Generator_TableClassName="Sub_group_numbersDataTable" msprop:Generator_TableVarName="tableSub_group_numbers" msprop:Generator_TablePropName="Sub_group_numbers" msprop:Generator_RowDeletingName="Sub_group_numbersRowDeleting" msprop:Generator_RowChangingName="Sub_group_numbersRowChanging" msprop:Generator_RowEvHandlerName="Sub_group_numbersRowChangeEventHandler" msprop:Generator_RowDeletedName="Sub_group_numbersRowDeleted" msprop:Generator_UserTableName="Sub_group_numbers" msprop:Generator_RowChangedName="Sub_group_numbersRowChanged" msprop:Generator_RowEvArgName="Sub_group_numbersRowChangeEvent" msprop:Generator_RowClassName="Sub_group_numbersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sub_group_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSub_group_id" msprop:Generator_ColumnPropNameInRow="Sub_group_id" msprop:Generator_ColumnPropNameInTable="Sub_group_idColumn" msprop:Generator_UserColumnName="Sub_group_id" type="xs:int" />
              <xs:element name="Sub_group_number" msprop:Generator_ColumnVarNameInTable="columnSub_group_number" msprop:Generator_ColumnPropNameInRow="Sub_group_number" msprop:Generator_ColumnPropNameInTable="Sub_group_numberColumn" msprop:Generator_UserColumnName="Sub_group_number" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Academicyrsemtable" />
      <xs:field xpath="mstns:AcademicYrsemId" />
    </xs:unique>
    <xs:unique name="Group_id_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group_id" />
      <xs:field xpath="mstns:Group_key" />
    </xs:unique>
    <xs:unique name="Group_number_table_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group_number_table" />
      <xs:field xpath="mstns:Group_number_id" />
    </xs:unique>
    <xs:unique name="Programme_table_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Programme_table" />
      <xs:field xpath="mstns:Programme_Id" />
    </xs:unique>
    <xs:unique name="Student_Details_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student_Details" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Sub_group_id_table_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sub_group_id_table" />
      <xs:field xpath="mstns:Subgroup_id_key" />
    </xs:unique>
    <xs:unique name="Sub_group_numbers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sub_group_numbers" />
      <xs:field xpath="mstns:Sub_group_id" />
    </xs:unique>
  </xs:element>
</xs:schema>